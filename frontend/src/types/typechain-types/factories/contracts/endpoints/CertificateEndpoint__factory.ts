/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CertificateEndpoint,
  CertificateEndpointInterface,
} from "../../../contracts/endpoints/CertificateEndpoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "issuerStorageAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "issuerEndpointAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "applicantStorageAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "applicantEndpointAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "accreditationStorageAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "certificateStorageAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "certificateNFTAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "issuerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "applicantAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accreditationId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "level",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "eventId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "remarks",
        type: "string",
      },
    ],
    name: "IssueCertificate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getCertificateById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "issuer",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "applicant",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accreditationId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "level",
            type: "string",
          },
          {
            internalType: "string",
            name: "eventId",
            type: "string",
          },
          {
            internalType: "string",
            name: "remarks",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isRevoked",
            type: "bool",
          },
          {
            internalType: "string",
            name: "revokeReason",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revokeTime",
            type: "uint256",
          },
        ],
        internalType: "struct Certificate",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getCompleteCertById",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address payable",
                name: "issuerAddress",
                type: "address",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
              {
                internalType: "string",
                name: "logoUrl",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
            ],
            internalType: "struct Issuer",
            name: "issuer",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "applicantAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
            ],
            internalType: "struct Applicant",
            name: "applicant",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "issuer",
                type: "address",
              },
              {
                internalType: "string",
                name: "title",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "duration",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "nature",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
              {
                internalType: "bool",
                name: "isRevoked",
                type: "bool",
              },
              {
                internalType: "string",
                name: "revokeReason",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "revokeTime",
                type: "uint256",
              },
            ],
            internalType: "struct Accreditation",
            name: "accreditation",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "issuer",
                type: "address",
              },
              {
                internalType: "address payable",
                name: "applicant",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "accreditationId",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "level",
                type: "string",
              },
              {
                internalType: "string",
                name: "eventId",
                type: "string",
              },
              {
                internalType: "string",
                name: "remarks",
                type: "string",
              },
              {
                internalType: "bool",
                name: "isRevoked",
                type: "bool",
              },
              {
                internalType: "string",
                name: "revokeReason",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "revokeTime",
                type: "uint256",
              },
            ],
            internalType: "struct Certificate",
            name: "certificate",
            type: "tuple",
          },
        ],
        internalType: "struct CompleteCert",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "issuerAddress",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "applicantAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accreditationId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "level",
        type: "string",
      },
      {
        internalType: "string",
        name: "eventId",
        type: "string",
      },
      {
        internalType: "string",
        name: "remarks",
        type: "string",
      },
    ],
    name: "issueCertificate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021053803806200210583398181016040528101906200003791906200063f565b62000053670bf094face5eb0a660c01b620005d260201b60201c565b6200006f676e16d994c3fd557960c01b620005d260201b60201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000cb679e9418459207159360c01b620005d260201b60201c565b86600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200012867dba2f45346c43ff860c01b620005d260201b60201c565b85600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000185675ea58db0e487ce5260c01b620005d260201b60201c565b84600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001e267602562af1e846d3e60c01b620005d260201b60201c565b83600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200023f6750441e6b74dbe50660c01b620005d260201b60201c565b82600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200029c67ecc907cc0c0dbc6e60c01b620005d260201b60201c565b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620002f9677594deae7f9de2fb60c01b620005d260201b60201c565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200035667334334585be4725160c01b620005d260201b60201c565b86600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620003b3674441222b6156f7b060c01b620005d260201b60201c565b85600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000410675dc357e330083e9c60c01b620005d260201b60201c565b84600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200046d678040cc89f067796d60c01b620005d260201b60201c565b83600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620004ca676aac32de836a419460c01b620005d260201b60201c565b82600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200052767be46444d57ec113460c01b620005d260201b60201c565b81600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200058467430288f41db2b06d60c01b620005d260201b60201c565b80600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050620006f2565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200060782620005da565b9050919050565b6200061981620005fa565b81146200062557600080fd5b50565b60008151905062000639816200060e565b92915050565b600080600080600080600060e0888a031215620006615762000660620005d5565b5b6000620006718a828b0162000628565b9750506020620006848a828b0162000628565b9650506040620006978a828b0162000628565b9550506060620006aa8a828b0162000628565b9450506080620006bd8a828b0162000628565b93505060a0620006d08a828b0162000628565b92505060c0620006e38a828b0162000628565b91505092959891949750929550565b611a0380620007026000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806310ab14d5146100465780639d735caf14610076578063eb909fd7146100a6575b600080fd5b610060600480360381019061005b9190610afd565b6100d6565b60405161006d9190610c02565b60405180910390f35b610090600480360381019061008b9190610c1d565b610276565b60405161009d9190610e0f565b60405180910390f35b6100c060048036038101906100bb9190610c1d565b610371565b6040516100cd9190611191565b60405180910390f35b60006100ec6781975bd573b43fc760c01b61075d565b61010067867ea07f00ab5bda60c01b61075d565b61011467145fd430bd2e166c60c01b61075d565b6000600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166310ab14d58a8a8a8a8a8a8a6040518863ffffffff1660e01b815260040161017d979695949392919061120c565b602060405180830381600087803b15801561019757600080fd5b505af11580156101ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cf91906112a5565b90506101e567c49945e53c92204f60c01b61075d565b6101f9675f7f9f38166105c060c01b61075d565b7f55c7cfdbeea2835cca57dfd9a4397092116822da445490b2094a6daf899e5569818a8a8a8a8a8a8a6040516102369897969594939291906112d2565b60405180910390a16102526774023d64679001b360c01b61075d565b61026667c4e04d17ffdff03d60c01b61075d565b6001915050979650505050505050565b61027e610760565b61029267a8db19116d9cad4460c01b61075d565b6102a667303c80d1961ea41660c01b61075d565b6102ba67751a8a2fbe1646ac60c01b61075d565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639d735caf836040518263ffffffff1660e01b81526004016103159190610c02565b60006040518083038186803b15801561032d57600080fd5b505afa158015610341573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061036a919061159c565b9050919050565b6103796107e8565b61038d67527d3a45c7a0d61460c01b61075d565b6103a1677118375052bd6f5160c01b61075d565b6103b56767283586e88fc6c560c01b61075d565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639d735caf846040518263ffffffff1660e01b81526004016104129190610c02565b60006040518083038186803b15801561042a57600080fd5b505afa15801561043e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610467919061159c565b905061047d670fc210736878492960c01b61075d565b61049167d38107930bfdcdad60c01b61075d565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166387dbedfd83600001516040518263ffffffff1660e01b81526004016104f29190610c02565b60006040518083038186803b15801561050a57600080fd5b505afa15801561051e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610547919061174b565b905061055d67ca6f9c23540482aa60c01b61075d565b61057167a8296e68501bdd3860c01b61075d565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663026ff3df84604001516040518263ffffffff1660e01b81526004016105d29190611794565b60006040518083038186803b1580156105ea57600080fd5b505afa1580156105fe573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610627919061185b565b905061063d6746d2d1cabff5a49e60c01b61075d565b610651674c039314fb41166560c01b61075d565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f8818d085602001516040518263ffffffff1660e01b81526004016106b29190611794565b60006040518083038186803b1580156106ca57600080fd5b505afa1580156106de573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107079190611984565b905061071d67496fc60a3e271b5660c01b61075d565b610731675449ced63295cf1360c01b61075d565b604051806080016040528082815260200183815260200184815260200185815250945050505050919050565b50565b60405180610160016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160608152602001606081526020016060815260200160001515815260200160608152602001600081525090565b60405180608001604052806107fb610828565b815260200161080861086d565b81526020016108156108a4565b8152602001610822610760565b81525090565b6040518060a0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081525090565b604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b60405180610140016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016000815260200160008152602001606081526020016060815260200160001515815260200160608152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061094e82610923565b9050919050565b61095e81610943565b811461096957600080fd5b50565b60008135905061097b81610955565b92915050565b6000819050919050565b61099481610981565b811461099f57600080fd5b50565b6000813590506109b18161098b565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a0a826109c1565b810181811067ffffffffffffffff82111715610a2957610a286109d2565b5b80604052505050565b6000610a3c61090f565b9050610a488282610a01565b919050565b600067ffffffffffffffff821115610a6857610a676109d2565b5b610a71826109c1565b9050602081019050919050565b82818337600083830152505050565b6000610aa0610a9b84610a4d565b610a32565b905082815260208101848484011115610abc57610abb6109bc565b5b610ac7848285610a7e565b509392505050565b600082601f830112610ae457610ae36109b7565b5b8135610af4848260208601610a8d565b91505092915050565b600080600080600080600060e0888a031215610b1c57610b1b610919565b5b6000610b2a8a828b0161096c565b9750506020610b3b8a828b0161096c565b9650506040610b4c8a828b016109a2565b9550506060610b5d8a828b016109a2565b945050608088013567ffffffffffffffff811115610b7e57610b7d61091e565b5b610b8a8a828b01610acf565b93505060a088013567ffffffffffffffff811115610bab57610baa61091e565b5b610bb78a828b01610acf565b92505060c088013567ffffffffffffffff811115610bd857610bd761091e565b5b610be48a828b01610acf565b91505092959891949750929550565b610bfc81610981565b82525050565b6000602082019050610c176000830184610bf3565b92915050565b600060208284031215610c3357610c32610919565b5b6000610c41848285016109a2565b91505092915050565b610c5381610981565b82525050565b610c6281610943565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ca2578082015181840152602081019050610c87565b83811115610cb1576000848401525b50505050565b6000610cc282610c68565b610ccc8185610c73565b9350610cdc818560208601610c84565b610ce5816109c1565b840191505092915050565b60008115159050919050565b610d0581610cf0565b82525050565b600061016083016000830151610d246000860182610c4a565b506020830151610d376020860182610c59565b506040830151610d4a6040860182610c59565b506060830151610d5d6060860182610c4a565b506080830151610d706080860182610c4a565b5060a083015184820360a0860152610d888282610cb7565b91505060c083015184820360c0860152610da28282610cb7565b91505060e083015184820360e0860152610dbc8282610cb7565b915050610100830151610dd3610100860182610cfc565b50610120830151848203610120860152610ded8282610cb7565b915050610140830151610e04610140860182610c4a565b508091505092915050565b60006020820190508181036000830152610e298184610d0b565b905092915050565b600060a0830160008301518482036000860152610e4e8282610cb7565b9150506020830151610e636020860182610c59565b5060408301518482036040860152610e7b8282610cb7565b91505060608301518482036060860152610e958282610cb7565b9150506080830151610eaa6080860182610c4a565b508091505092915050565b6000610ec082610923565b9050919050565b610ed081610eb5565b82525050565b60006060830160008301518482036000860152610ef38282610cb7565b9150506020830151610f086020860182610ec7565b506040830151610f1b6040860182610c4a565b508091505092915050565b600061014083016000830151610f3f6000860182610c4a565b506020830151610f526020860182610c59565b5060408301518482036040860152610f6a8282610cb7565b9150506060830151610f7f6060860182610c4a565b506080830151610f926080860182610c4a565b5060a083015184820360a0860152610faa8282610cb7565b91505060c083015184820360c0860152610fc48282610cb7565b91505060e0830151610fd960e0860182610cfc565b50610100830151848203610100860152610ff38282610cb7565b91505061012083015161100a610120860182610c4a565b508091505092915050565b60006101608301600083015161102e6000860182610c4a565b5060208301516110416020860182610c59565b5060408301516110546040860182610c59565b5060608301516110676060860182610c4a565b50608083015161107a6080860182610c4a565b5060a083015184820360a08601526110928282610cb7565b91505060c083015184820360c08601526110ac8282610cb7565b91505060e083015184820360e08601526110c68282610cb7565b9150506101008301516110dd610100860182610cfc565b506101208301518482036101208601526110f78282610cb7565b91505061014083015161110e610140860182610c4a565b508091505092915050565b600060808301600083015184820360008601526111368282610e31565b915050602083015184820360208601526111508282610ed6565b9150506040830151848203604086015261116a8282610f26565b915050606083015184820360608601526111848282611015565b9150508091505092915050565b600060208201905081810360008301526111ab8184611119565b905092915050565b6111bc81610943565b82525050565b600082825260208201905092915050565b60006111de82610c68565b6111e881856111c2565b93506111f8818560208601610c84565b611201816109c1565b840191505092915050565b600060e082019050611221600083018a6111b3565b61122e60208301896111b3565b61123b6040830188610bf3565b6112486060830187610bf3565b818103608083015261125a81866111d3565b905081810360a083015261126e81856111d3565b905081810360c083015261128281846111d3565b905098975050505050505050565b60008151905061129f8161098b565b92915050565b6000602082840312156112bb576112ba610919565b5b60006112c984828501611290565b91505092915050565b6000610100820190506112e8600083018b610bf3565b6112f5602083018a6111b3565b61130260408301896111b3565b61130f6060830188610bf3565b61131c6080830187610bf3565b81810360a083015261132e81866111d3565b905081810360c083015261134281856111d3565b905081810360e083015261135681846111d3565b90509998505050505050505050565b600080fd5b600080fd5b60008151905061137e81610955565b92915050565b600061139761139284610a4d565b610a32565b9050828152602081018484840111156113b3576113b26109bc565b5b6113be848285610c84565b509392505050565b600082601f8301126113db576113da6109b7565b5b81516113eb848260208601611384565b91505092915050565b6113fd81610cf0565b811461140857600080fd5b50565b60008151905061141a816113f4565b92915050565b6000610160828403121561143757611436611365565b5b611442610160610a32565b9050600061145284828501611290565b60008301525060206114668482850161136f565b602083015250604061147a8482850161136f565b604083015250606061148e84828501611290565b60608301525060806114a284828501611290565b60808301525060a082015167ffffffffffffffff8111156114c6576114c561136a565b5b6114d2848285016113c6565b60a08301525060c082015167ffffffffffffffff8111156114f6576114f561136a565b5b611502848285016113c6565b60c08301525060e082015167ffffffffffffffff8111156115265761152561136a565b5b611532848285016113c6565b60e0830152506101006115478482850161140b565b6101008301525061012082015167ffffffffffffffff81111561156d5761156c61136a565b5b611579848285016113c6565b6101208301525061014061158f84828501611290565b6101408301525092915050565b6000602082840312156115b2576115b1610919565b5b600082015167ffffffffffffffff8111156115d0576115cf61091e565b5b6115dc84828501611420565b91505092915050565b600061014082840312156115fc576115fb611365565b5b611607610140610a32565b9050600061161784828501611290565b600083015250602061162b8482850161136f565b602083015250604082015167ffffffffffffffff81111561164f5761164e61136a565b5b61165b848285016113c6565b604083015250606061166f84828501611290565b606083015250608061168384828501611290565b60808301525060a082015167ffffffffffffffff8111156116a7576116a661136a565b5b6116b3848285016113c6565b60a08301525060c082015167ffffffffffffffff8111156116d7576116d661136a565b5b6116e3848285016113c6565b60c08301525060e06116f78482850161140b565b60e08301525061010082015167ffffffffffffffff81111561171c5761171b61136a565b5b611728848285016113c6565b6101008301525061012061173e84828501611290565b6101208301525092915050565b60006020828403121561176157611760610919565b5b600082015167ffffffffffffffff81111561177f5761177e61091e565b5b61178b848285016115e5565b91505092915050565b60006020820190506117a960008301846111b3565b92915050565b6117b881610eb5565b81146117c357600080fd5b50565b6000815190506117d5816117af565b92915050565b6000606082840312156117f1576117f0611365565b5b6117fb6060610a32565b9050600082015167ffffffffffffffff81111561181b5761181a61136a565b5b611827848285016113c6565b600083015250602061183b848285016117c6565b602083015250604061184f84828501611290565b60408301525092915050565b60006020828403121561187157611870610919565b5b600082015167ffffffffffffffff81111561188f5761188e61091e565b5b61189b848285016117db565b91505092915050565b600060a082840312156118ba576118b9611365565b5b6118c460a0610a32565b9050600082015167ffffffffffffffff8111156118e4576118e361136a565b5b6118f0848285016113c6565b60008301525060206119048482850161136f565b602083015250604082015167ffffffffffffffff8111156119285761192761136a565b5b611934848285016113c6565b604083015250606082015167ffffffffffffffff8111156119585761195761136a565b5b611964848285016113c6565b606083015250608061197884828501611290565b60808301525092915050565b60006020828403121561199a57611999610919565b5b600082015167ffffffffffffffff8111156119b8576119b761091e565b5b6119c4848285016118a4565b9150509291505056fea264697066735822122040515f73aba12e35e0644889ac0f34032eeeba574463e0e4d9e41ae3d64088b864736f6c63430008090033";

type CertificateEndpointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CertificateEndpointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CertificateEndpoint__factory extends ContractFactory {
  constructor(...args: CertificateEndpointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    issuerStorageAddress: PromiseOrValue<string>,
    issuerEndpointAddress: PromiseOrValue<string>,
    applicantStorageAddress: PromiseOrValue<string>,
    applicantEndpointAddress: PromiseOrValue<string>,
    accreditationStorageAddress: PromiseOrValue<string>,
    certificateStorageAddress: PromiseOrValue<string>,
    certificateNFTAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CertificateEndpoint> {
    return super.deploy(
      issuerStorageAddress,
      issuerEndpointAddress,
      applicantStorageAddress,
      applicantEndpointAddress,
      accreditationStorageAddress,
      certificateStorageAddress,
      certificateNFTAddress,
      overrides || {}
    ) as Promise<CertificateEndpoint>;
  }
  override getDeployTransaction(
    issuerStorageAddress: PromiseOrValue<string>,
    issuerEndpointAddress: PromiseOrValue<string>,
    applicantStorageAddress: PromiseOrValue<string>,
    applicantEndpointAddress: PromiseOrValue<string>,
    accreditationStorageAddress: PromiseOrValue<string>,
    certificateStorageAddress: PromiseOrValue<string>,
    certificateNFTAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      issuerStorageAddress,
      issuerEndpointAddress,
      applicantStorageAddress,
      applicantEndpointAddress,
      accreditationStorageAddress,
      certificateStorageAddress,
      certificateNFTAddress,
      overrides || {}
    );
  }
  override attach(address: string): CertificateEndpoint {
    return super.attach(address) as CertificateEndpoint;
  }
  override connect(signer: Signer): CertificateEndpoint__factory {
    return super.connect(signer) as CertificateEndpoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CertificateEndpointInterface {
    return new utils.Interface(_abi) as CertificateEndpointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CertificateEndpoint {
    return new Contract(address, _abi, signerOrProvider) as CertificateEndpoint;
  }
}
