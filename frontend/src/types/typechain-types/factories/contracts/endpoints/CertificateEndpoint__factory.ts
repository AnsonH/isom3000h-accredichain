/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CertificateEndpoint,
  CertificateEndpointInterface,
} from "../../../contracts/endpoints/CertificateEndpoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "issuerStorageAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "applicantStorageAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "accreditationStorageAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "certificateStorageAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "certificateNFTAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accreditationId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "applicantAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "issuerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "level",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "eventId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "remarks",
        type: "string",
      },
    ],
    name: "IssueCertificate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getCertificateById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "issuer",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "applicant",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accreditationId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "level",
            type: "string",
          },
          {
            internalType: "string",
            name: "eventId",
            type: "string",
          },
          {
            internalType: "string",
            name: "remarks",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isRevoked",
            type: "bool",
          },
          {
            internalType: "string",
            name: "revokeReason",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revokeTime",
            type: "uint256",
          },
        ],
        internalType: "struct Certificate",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "inputAddress",
        type: "address",
      },
    ],
    name: "getCertificatesByApplicantAddress",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "issuer",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "applicant",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accreditationId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "level",
            type: "string",
          },
          {
            internalType: "string",
            name: "eventId",
            type: "string",
          },
          {
            internalType: "string",
            name: "remarks",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isRevoked",
            type: "bool",
          },
          {
            internalType: "string",
            name: "revokeReason",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "revokeTime",
            type: "uint256",
          },
        ],
        internalType: "struct Certificate[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getCompleteCertById",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address payable",
                name: "issuerAddress",
                type: "address",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
              {
                internalType: "string",
                name: "logoUrl",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
            ],
            internalType: "struct Issuer",
            name: "issuer",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "applicantAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
            ],
            internalType: "struct Applicant",
            name: "applicant",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "issuer",
                type: "address",
              },
              {
                internalType: "string",
                name: "title",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "duration",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "nature",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
              {
                internalType: "bool",
                name: "isRevoked",
                type: "bool",
              },
              {
                internalType: "string",
                name: "revokeReason",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "revokeTime",
                type: "uint256",
              },
            ],
            internalType: "struct Accreditation",
            name: "accreditation",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "issuer",
                type: "address",
              },
              {
                internalType: "address payable",
                name: "applicant",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "createdAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "accreditationId",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "level",
                type: "string",
              },
              {
                internalType: "string",
                name: "eventId",
                type: "string",
              },
              {
                internalType: "string",
                name: "remarks",
                type: "string",
              },
              {
                internalType: "bool",
                name: "isRevoked",
                type: "bool",
              },
              {
                internalType: "string",
                name: "revokeReason",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "revokeTime",
                type: "uint256",
              },
            ],
            internalType: "struct Certificate",
            name: "certificate",
            type: "tuple",
          },
        ],
        internalType: "struct CompleteCert",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "applicantAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accreditationId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "level",
        type: "string",
      },
      {
        internalType: "string",
        name: "eventId",
        type: "string",
      },
      {
        internalType: "string",
        name: "remarks",
        type: "string",
      },
    ],
    name: "issueCertificate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type CertificateEndpointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CertificateEndpointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CertificateEndpoint__factory extends ContractFactory {
  constructor(...args: CertificateEndpointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    issuerStorageAddress: PromiseOrValue<string>,
    applicantStorageAddress: PromiseOrValue<string>,
    accreditationStorageAddress: PromiseOrValue<string>,
    certificateStorageAddress: PromiseOrValue<string>,
    certificateNFTAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CertificateEndpoint> {
    return super.deploy(
      issuerStorageAddress,
      applicantStorageAddress,
      accreditationStorageAddress,
      certificateStorageAddress,
      certificateNFTAddress,
      overrides || {}
    ) as Promise<CertificateEndpoint>;
  }
  override getDeployTransaction(
    issuerStorageAddress: PromiseOrValue<string>,
    applicantStorageAddress: PromiseOrValue<string>,
    accreditationStorageAddress: PromiseOrValue<string>,
    certificateStorageAddress: PromiseOrValue<string>,
    certificateNFTAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      issuerStorageAddress,
      applicantStorageAddress,
      accreditationStorageAddress,
      certificateStorageAddress,
      certificateNFTAddress,
      overrides || {}
    );
  }
  override attach(address: string): CertificateEndpoint {
    return super.attach(address) as CertificateEndpoint;
  }
  override connect(signer: Signer): CertificateEndpoint__factory {
    return super.connect(signer) as CertificateEndpoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CertificateEndpointInterface {
    return new utils.Interface(_abi) as CertificateEndpointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CertificateEndpoint {
    return new Contract(address, _abi, signerOrProvider) as CertificateEndpoint;
  }
}
