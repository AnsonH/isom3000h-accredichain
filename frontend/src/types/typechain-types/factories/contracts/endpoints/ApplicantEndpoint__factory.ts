/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ApplicantEndpoint,
  ApplicantEndpointInterface,
} from "../../../contracts/endpoints/ApplicantEndpoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "applicantStorageAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "applicantAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    name: "RegisterApplicant",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "applicantAddress",
        type: "address",
      },
    ],
    name: "getApplicantByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "applicantAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct Applicant",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "registerApplicant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b71380380610b71833981810160405281019061003291906101c8565b61004c676cb517f08bfc56c760c01b61016260201b60201c565b61006667998f78583c0c635d60c01b61016260201b60201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100c067aaba4dee578c847760c01b61016260201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061011b6740fee55be2a4aa9460c01b61016260201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101f5565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101958261016a565b9050919050565b6101a58161018a565b81146101b057600080fd5b50565b6000815190506101c28161019c565b92915050565b6000602082840312156101de576101dd610165565b5b60006101ec848285016101b3565b91505092915050565b61096d806102046000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063026ff3df1461003b57806335d369651461006b575b600080fd5b610055600480360381019061005091906103bb565b610087565b604051610062919061050b565b60405180910390f35b61008560048036038101906100809190610662565b610182565b005b61008f610312565b6100a3678c6a2d2a81cb218160c01b61030f565b6100b767f67de01624640da960c01b61030f565b6100cb676453ab01ee9ead4260c01b61030f565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663026ff3df836040518263ffffffff1660e01b815260040161012691906106ba565b60006040518083038186803b15801561013e57600080fd5b505afa158015610152573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061017b9190610827565b9050919050565b61019667e1a1915306a8bd5f60c01b61030f565b6101aa677e4e09734ca4be8460c01b61030f565b6101be67fcd02b0c1669238c60c01b61030f565b60003390506101d76749465789ca12a8e860c01b61030f565b6101eb672ccdf36905d211be60c01b61030f565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634bd5551983856040518363ffffffff1660e01b815260040161024a9291906108ba565b600060405180830381600087803b15801561026457600080fd5b505af1158015610278573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102a19190610827565b90506102b7674fc0f886668f647d60c01b61030f565b6102cb67769abda972e4119460c01b61030f565b7f8929ca835babba72e47fd99b2ea301aecfd36661a514096deed07d2383379be982848360400151604051610302939291906108f9565b60405180910390a1505050565b50565b604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103888261035d565b9050919050565b6103988161037d565b81146103a357600080fd5b50565b6000813590506103b58161038f565b92915050565b6000602082840312156103d1576103d0610353565b5b60006103df848285016103a6565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610422578082015181840152602081019050610407565b83811115610431576000848401525b50505050565b6000601f19601f8301169050919050565b6000610453826103e8565b61045d81856103f3565b935061046d818560208601610404565b61047681610437565b840191505092915050565b600061048c8261035d565b9050919050565b61049c81610481565b82525050565b6000819050919050565b6104b5816104a2565b82525050565b600060608301600083015184820360008601526104d88282610448565b91505060208301516104ed6020860182610493565b50604083015161050060408601826104ac565b508091505092915050565b6000602082019050818103600083015261052581846104bb565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61056f82610437565b810181811067ffffffffffffffff8211171561058e5761058d610537565b5b80604052505050565b60006105a1610349565b90506105ad8282610566565b919050565b600067ffffffffffffffff8211156105cd576105cc610537565b5b6105d682610437565b9050602081019050919050565b82818337600083830152505050565b6000610605610600846105b2565b610597565b90508281526020810184848401111561062157610620610532565b5b61062c8482856105e3565b509392505050565b600082601f8301126106495761064861052d565b5b81356106598482602086016105f2565b91505092915050565b60006020828403121561067857610677610353565b5b600082013567ffffffffffffffff81111561069657610695610358565b5b6106a284828501610634565b91505092915050565b6106b48161037d565b82525050565b60006020820190506106cf60008301846106ab565b92915050565b600080fd5b600080fd5b60006106f26106ed846105b2565b610597565b90508281526020810184848401111561070e5761070d610532565b5b610719848285610404565b509392505050565b600082601f8301126107365761073561052d565b5b81516107468482602086016106df565b91505092915050565b61075881610481565b811461076357600080fd5b50565b6000815190506107758161074f565b92915050565b610784816104a2565b811461078f57600080fd5b50565b6000815190506107a18161077b565b92915050565b6000606082840312156107bd576107bc6106d5565b5b6107c76060610597565b9050600082015167ffffffffffffffff8111156107e7576107e66106da565b5b6107f384828501610721565b600083015250602061080784828501610766565b602083015250604061081b84828501610792565b60408301525092915050565b60006020828403121561083d5761083c610353565b5b600082015167ffffffffffffffff81111561085b5761085a610358565b5b610867848285016107a7565b91505092915050565b600082825260208201905092915050565b600061088c826103e8565b6108968185610870565b93506108a6818560208601610404565b6108af81610437565b840191505092915050565b60006040820190506108cf60008301856106ab565b81810360208301526108e18184610881565b90509392505050565b6108f3816104a2565b82525050565b600060608201905061090e60008301866106ab565b81810360208301526109208185610881565b905061092f60408301846108ea565b94935050505056fea2646970667358221220c4805ce3ac27979ddedad2680ad0beb4ccdb6741c16e1a5564a577fb052d691064736f6c63430008090033";

type ApplicantEndpointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ApplicantEndpointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ApplicantEndpoint__factory extends ContractFactory {
  constructor(...args: ApplicantEndpointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    applicantStorageAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ApplicantEndpoint> {
    return super.deploy(
      applicantStorageAddress,
      overrides || {}
    ) as Promise<ApplicantEndpoint>;
  }
  override getDeployTransaction(
    applicantStorageAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(applicantStorageAddress, overrides || {});
  }
  override attach(address: string): ApplicantEndpoint {
    return super.attach(address) as ApplicantEndpoint;
  }
  override connect(signer: Signer): ApplicantEndpoint__factory {
    return super.connect(signer) as ApplicantEndpoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ApplicantEndpointInterface {
    return new utils.Interface(_abi) as ApplicantEndpointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ApplicantEndpoint {
    return new Contract(address, _abi, signerOrProvider) as ApplicantEndpoint;
  }
}
